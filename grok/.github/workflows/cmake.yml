name: CMake

on: [push]

env:
  BUILD_TYPE: Release
  DATA_ROOT: ${{github.workspace}}/data
  GENERATOR_PLATFORM:

jobs:
  build:
    strategy:
       matrix:
        os: [ubuntu-latest, windows-latest]
  
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: dependencies
      run: |
        git clone --depth=1 --branch=master https://github.com/GrokImageCompression/grok-test-data.git ${{ env.DATA_ROOT }}
        python3 -m pip install --upgrade pip
        pip3 install --user jpylyzer

    - name: ubuntu-dependencies
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get install -y gcc-10 g++-10
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 \
          --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10
        python3 -m site &> /dev/null && PATH="$PATH:`python3 -m site --user-base`/bin"

    - name: macos-dependencies
      if: startsWith(matrix.os, 'macos')
      run: |
        python3 -m site &> /dev/null && PATH="$PATH:`python3 -m site --user-base`/bin"

    - name: windows-dependencies
      if: startsWith(matrix.os, 'windows')
      run: |
        $env:Path += ";C:\Users\runneradmin\AppData\Roaming\Python\Python37\Scripts"
        $generator= "-DCMAKE_GENERATOR_PLATFORM=x64"
        echo "Generator: ${generator}"
        echo "GENERATOR_PLATFORM=$generator" >> $env:GITHUB_ENV

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_THIRDPARTY:BOOL=ON -DBUILD_TESTING:BOOL=ON -DGRK_DATA_ROOT=$DATA_ROOT $GENERATOR_PLATFORM

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --output-on-failure -C $BUILD_TYPE
